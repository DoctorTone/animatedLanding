/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    DRT: THREE.Mesh;
    Software: THREE.Mesh;
  };
  materials: {
    Orange: THREE.MeshStandardMaterial;
  };
};

export function DRT(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("./models/DRT.gltf") as GLTFResult;
  return (
    <group {...props} dispose={null} scale={10}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.DRT.geometry}
        material={materials.Orange}
        position={[0.227, 0.194, 0.007]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Software.geometry}
        material={materials.Orange}
        position={[0.012, -0.311, 0]}
      />
    </group>
  );
}

useGLTF.preload("./models/DRT.gltf");
